/** vite-plugin-necessary-import
 *
 * @author halo951(https://github.com/halo951)
 * @license MIT
 */
import{normalizePath as e,transformWithEsbuild as t,createFilter as o,createLogger as r}from"vite";import{globSync as n}from"glob";import*as s from"node:path";import a from"node:module";const i=(e,t)=>{const o=a.createRequire(import.meta.url);try{return o(t?o.resolve(e,{paths:[t]}):e)}catch(e){}},c=new Map,l=t=>{const{root:o,library:r,styleDir:a,extension:l}=t;return t=>{const p=t.replace(/[A-Z]/g,((e,t)=>(t?"-":"")+e.toLowerCase()));const m=t.toLowerCase(),u=((t,o,r,a)=>{const l=s.join(t,"node_modules",o,r),p=`${o}@${i(`${o}/package.json`,t)?.version||"*"}`;return c.get(p)??(()=>{const t=n(a,{matchBase:!0,cwd:l}).map((t=>e(t)));return c.set(p,t),t})()})(o,r,a,l).filter((e=>{const t=e.split("/").map((e=>s.basename(e,s.extname(e))));return t.some((e=>[p,m].includes(e.toLowerCase())))})).map((t=>e(s.join(r,a,t)))).sort(((e,t)=>{let o=[0,0];return o[0]+=e.replace(/[-]/,"").toLowerCase().indexOf(m),o[1]+=t.replace(/[-]/,"").toLowerCase().indexOf(m),o[0]+=l.length-l.findIndex((t=>t.includes(s.extname(e)))),o[1]+=l.length-l.findIndex((e=>e.includes(s.extname(t)))),-1*(o[0]-o[1])}));return u.length>0?u[0]:void 0}};var p={name:"default",match:e=>!0,tranfromToBlock:async(e,t)=>[{type:"script",source:t,map:null}],output:async(e,o)=>await t(o[0].source,e,{})},m={name:"vue",match:e=>!!e.replace(/\?.*/,"").match(/\.vue$/),tranfromToBlock:async(e,t,{root:o})=>[{type:"script",source:t,map:null}],output:async(e,t)=>({code:t.map((e=>e.source)).join("\n"),map:null})};class u{logger;ctx;root;options;parsers=[m,p];getParser(e,t){return this.parsers.find((o=>o.match(e,t)))}async transform(e,t){const{root:o,ctx:r}=this,n=this.getParser(e,t);if(!n)return;this.logger.info(`necessary import > parser: ${n.name}, file: ${e}`),"silent"===this.options.logLevel&&console.time(`parser: ${n.name}`);const s=await n.tranfromToBlock(e,t,{ctx:r,root:o});for(const e of s)if(["script","scriptsetup"].includes(e.type)){const t=this.appendStyleImport(e.source);t&&(e.source=t)}return"silent"===this.options.logLevel&&console.timeEnd(`parser: ${n.name}`),n.output(e,s)}appendStyleImport(e){const{library:t,noComponent:o}=this.options,r=this.ctx.parse(e),{body:n}=r,s=e=>e.source.value===t,a=[];for(const e of n)if("ImportDeclaration"===e.type&&s(e))for(const t of e.specifiers)if(t.imported?.name){const e=t.imported.name;a.push(e)}const i=a.filter((e=>!(o??[]).includes(e))).map((e=>this.transformComponentNameToStyleImportStatement(e))).filter((e=>!!e));if(i.length)return[...i,e].join("\n")}transformComponentNameToStyleImportStatement(e){const{noFoundStyle:t}=this.options,o=this.createStylePathFactory()(e);if(o)return this.logger.info(`necessary import > import '${o}'`),`import '${o}';`;{if(null===o)return;const r=`necessary import > 组件: '${e}' 未找到样式文件, 如果这不是一个组件, 那么需要添加 'noComponent' 配置`;if("error"===t)throw new Error(r);"warn"===t&&this.logger.warn(r)}}createStylePathFactory(){const{root:e}=this,{library:t,extension:o,styleDir:r}=this.options;let n;return n="function"==typeof r?r:l({root:e,library:t,styleDir:r,extension:o}),n}}const f=e=>{const t=e.include??["src/**/*.ts(x|)","src/**/*.js(x|)","src/**/*.vue"],n=e.exclude??[],s=e.logLevel??"warn",a=o(t,n),c=r(s),l=new u;return{name:"vite-plugin:necessary-import",enforce:"post",configResolved(o){if(r=e.library,a=o.root,!i(`${r}/package.json`,a))throw new Error(`> necessaryImport: The library '${e.library}' is not install.`);var r,a;const p=e.styleDir??"/";let m=["css","less","scss","sass"];e.extension instanceof Array&&(m=e.extension),m=m.map((e=>e.includes("*")?e:`*.${e}`)),l.root=o.root,l.logger=c,l.options={library:e.library,noFoundStyle:e.noFoundStyle??"warn",noComponent:e.noComponent??[],include:t,exclude:n,logLevel:s,styleDir:p,extension:m}},buildStart(){l.ctx=this},async transform(e,t){if(!a(t))return;return await l.transform(t,e)}}};export{f as necessaryImport};
