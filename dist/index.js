/** vite-plugin-necessary-import
 *
 * @author halo951(https://github.com/halo951)
 * @license MIT
 */
"use strict";var e=require("vite"),t=require("glob"),r=require("node:path"),o=require("node:module"),n=require("node:crypto");function s(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var o=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,o.get?o:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var i=s(r),a={name:"default",match:e=>!0,tranfromToBlock:async(e,t)=>[{type:"script",source:t,map:null}],output:async(t,r)=>await e.transformWithEsbuild(r[0].source,t,{})};const c=new Map,l=(r,o)=>{const s=(i=JSON.stringify({scanDir:r,extension:o}),n.createHash("sha256").update(i).digest("hex").substring(0,8));var i;return c.get(s)??(()=>{const n=t.globSync(o,{matchBase:!0,cwd:r}).map((t=>e.normalizePath(t)));return c.set(s,n),n})()},u=(e,t)=>!!((e,t)=>{const r=o.createRequire("undefined"==typeof document?require("url").pathToFileURL(__filename).href:document.currentScript&&document.currentScript.src||new URL("index.js",document.baseURI).href);try{return r(t?r.resolve(e,{paths:[t]}):e)}catch(e){}})(e,t);class p{logger;ctx;root;options;parsers=[a];getParser(e,t){return this.parsers.find((r=>r.match(e,t)))}async transform(e,t){const{root:r,ctx:o}=this,n=this.getParser(e,t);if(!n)return;this.logger.info(`necessary import > parser: ${n.name}, file: ${e}`);const s=await n.tranfromToBlock(e,t,{ctx:o,root:r});for(const e of s)if(["script","scriptsetup"].includes(e.type)){const t=this.appendStyleImport(e.source);t&&(e.source=t)}return n.output(e,s)}appendStyleImport(e){const{library:t,noComponent:r}=this.options,o=this.ctx.parse(e),{body:n}=o,s=e=>e.source.value===t,i=[];for(const e of n)if("ImportDeclaration"===e.type&&s(e))for(const t of e.specifiers){const e=t.imported.name;i.push(e)}const a=i.filter((e=>!(r??[]).includes(e))).map((e=>this.transformComponentNameToStyleImportStatement(e))).filter((e=>!!e));if(a.length)return[...a,e].join("\n")}transformComponentNameToStyleImportStatement(e){const{noFoundStyle:t}=this.options,r=this.createStylePathFactory()(e);if(r)return`import '${r}';`;{if(null===r)return;const o=`necessary import > 组件: '${e}' 未找到样式文件, 如果这不是一个组件, 那么需要添加 'noComponent' 配置`;if("error"===t)throw new Error(o);"warn"===t&&this.logger.warn(o)}}createStylePathFactory(){const{root:t}=this,{library:r,extension:o,styleDir:n}=this.options;let s;return s="function"==typeof n?n:(t=>{const{root:r,library:o,styleDir:n,extension:s}=t,a=i.join(r,"node_modules",o,n);return t=>{const r=t.replace(/[A-Z]/g,((e,t)=>(t?"-":"")+e.toLowerCase())),c=t.toLowerCase(),u=l(a,s).filter((e=>e.split("/").map((e=>i.basename(e,i.extname(e)))).some((e=>[r,c].includes(e.toLowerCase()))))).map((t=>e.normalizePath(i.join(o,n,t)))).sort(((e,t)=>{let r=[0,0];return r[0]+=e.replace(/[-]/,"").toLowerCase().indexOf(c),r[1]+=t.replace(/[-]/,"").toLowerCase().indexOf(c),r[0]+=s.length-s.indexOf(i.extname(e).replace(/.+?\./,"")),r[1]+=s.length-s.indexOf(i.extname(t).replace(/.+?\./,"")),-1*(r[0]-r[1])}));return u.length>0?u[0]:void 0}})({root:t,library:r,styleDir:n,extension:o}),s}}exports.necessaryImport=t=>{const r=t.include??["src/main.ts","src/App.vue"],o=t.exclude??[],n=t.logLevel??"info",s=e.createFilter(r,o),i=e.createLogger(n),a=new p;return{name:"vite-plugin:necessary-import",enforce:"post",configResolved(e){if(u(t.library,e.root))throw new Error(`> necessaryImport: The library '${t.library}' is not install.`);const s=t.styleDir??"/";let c=["css","less","scss","sass"];t.extension instanceof Array&&(c=t.extension),c=c.map((e=>e.includes("*")?e:`*.${e}`)),a.root=e.root,a.logger=i,a.options={include:r,exclude:o,logLevel:n,styleDir:s,extension:c,noComponent:[],noFoundStyle:"warn",...t}},buildStart(){a.ctx=this},async transform(e,t){if(!s(t))return;return await a.transform(t,e)}}};
